#!/bin/sh
# tlp-rdw - handle dock/undock events
#
# Copyright (c) 2016 Thomas Koch <linrunner at gmx.net>
# This software is licensed under the GPL v2 or later.

# --- Constants
readonly LIBDIR="/usr/share/tlp-pm"
readonly LIBS="tlp-functions tlp-rf-func"

# --- Source libraries
for lib in $LIBS; do
    if [ ! -f $LIBDIR/$lib ]; then
        echo "Error: missing function library \'$LIBDIR/$lib\'." 1>&2
        exit 1
    fi
    . $LIBDIR/$lib
done

# --- MAIN
read_defaults
check_tlp_enabled || exit 0
add_sbin2path

# get power state
get_power_state; onbat=$?

# get device/type
ddev=/sys$1
devtype=$2

case $devtype in
    dock)
        # check if type is "dock_station", exit if not
        type=$(cat $ddev/type)
        [ "$type" = "dock_station" ] || exit 0

        docked=$(cat $ddev/docked)
        action=$EVENT

        echo_debug "udev" "+++ rdw_udev($devtype).$action dev=$ddev type=$type docked=$docked onbat=$onbat"
        ;;

    usb_dock)
        case $ACTION in
            add)    action="dock"  ;;
            remove) action="undock"  ;;
        esac

        echo_debug "udev" "+++ rdw_udev($devtype).$action dev=$ddev onbat=$onbat"
        ;;

    *) exit 0 ;; # unknown device type
esac

# quit if timed lock in progress
if check_timed_lock $RDW_DOCK_LOCK ; then
    echo_debug "udev" "rdw_udev.locked"
    exit 0
fi

case $action in
    dock) # laptop was docked

        # lock for 2 seconds in case dock has multiple devices
        set_timed_lock $RDW_DOCK_LOCK $RDW_LOCKTIME 

        # enable configured radios (obey rdw nm locks too)
        for dev in $DEVICES_TO_ENABLE_ON_DOCK; do
            [ -n "$dev" ] && ! check_timed_lock "${RDW_NM_LOCK}_${dev}" \
                && device_switch $dev on "${RDW_NM_LOCK}_${dev}" $RDW_LOCKTIME
        done

        # disable configured radios (obey rdw nm locks too)
        for dev in $DEVICES_TO_DISABLE_ON_DOCK; do
            [ -n "$dev" ] && ! check_timed_lock "${RDW_NM_LOCK}_${dev}" \
                && device_switch $dev off "${RDW_NM_LOCK}_${dev}" $RDW_LOCKTIME
        done
        ;;

    undock) # laptop was undocked

        # lock for 2 seconds in case dock has multiple devices
        set_timed_lock $RDW_DOCK_LOCK $RDW_LOCKTIME

        # enable configured radios (obey rdw nm locks too)
        for dev in $DEVICES_TO_ENABLE_ON_UNDOCK; do
            [ -n "$dev" ] && ! check_timed_lock "${RDW_NM_LOCK}_${dev}" \
                && device_switch $dev on "${RDW_NM_LOCK}_${dev}" $RDW_LOCKTIME
        done

        # disable configured radios (obey rdw nm locks too)
        for dev in $DEVICES_TO_DISABLE_ON_UNDOCK; do
            [ -n "$dev" ] && ! check_timed_lock "${RDW_NM_LOCK}_${dev}" \
                && device_switch $dev off "${RDW_NM_LOCK}_${dev}" $RDW_LOCKTIME
        done
        ;;

    *) ;; # unknown action -> do nothing
esac

exit 0
